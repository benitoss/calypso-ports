//
//  Configuration file of the assembled computer
//
//======================================================================================================
// Processor board type
//
//  Board       CPU          Computer          Clock frequency
//-------------------------------------------------------------
//  МС1201.01   К1801ВМ1     DVK-1,DVK-2       100 Мhz
//  МС1201.02   К1801ВМ2     DVK-3             100 Мhz
//  МС1260      М2 (LSI-11)  Electronika-60     75 Мhz
//  МС1280      М4 (LSI-11M)                    50 Мhz
//------------------------------------------------------------
// Do not uncomment these lines. This is selected in the specific qsf file
//`define mc1201_01_board
//`define mc1201_02_board
//`define mc1260_board
//`define mc1280_board

//======================================================================================================
//
//  Included components
//  Comment out unnecessary modules if you want to exclude them from the design.
//

`define KSM_module        // Text controller КSМ
`define KGD_module        // Graphic controller KGD
`define IRPS2_module      // Second serial port IRPS
//`define IRPR_module     // Paraller port IRPR
`define RK_module         // disk RK-11/RK05
`define DM_module         // disk RK611/RK07
`define DW_module         // DW hard drive
`define DX_module         // Floppy Disk RX01
`define MY_module         // DD Floppy Disk MY
//`define bootrom_module    // Monitor-Loader M9312

//======================================================================================================
//
// User ROM in space 140000-157776
// To include the ROM in the circuit, uncomment the line and specify the name of the mif file loaded into the ROM.
// The size of the rom should not exceed 8Kb

//`define userrom "dvk-fpga/rom/013-basic.mif"
//`define userrom "dvk-fpga/rom/058-focal.mif"

//======================================================================================================
//
// Selecting a font file for the KSM text terminal
// Uncomment one of the lines pointing to the desired font file.

//   * font-main - 8*12 font, smooth and easy to read on LCD monitors
`define fontrom_file "dvk-fpga/ksm-firmware/font/font-main.mif"

//   * font-ksm - 8*8 font, from the ROM of the KSM character generator. With it, the screen will look exactly like the original KSM.
//     The font is rather clumsy, interesting only from a historical point of view.
//`define fontrom_file "dvk-fpga/ksm-firmware/font/font-ksm.mif"

//======================================================================================================
// Initial serial port speed
// 
//  Serial Port Speed ​​Indexes:
//  0 - 1200
//  1 - 2400
//  2 - 4800
//  3 - 9600
//  4 - 19200
//  5 - 38400
//  6 - 57600
//  7 - 115200

// Initial terminal speed
`define TERMINAL_SPEED 3'd5

// Speed of the second serial interface
`define UART2SPEED 3'd5

//======================================================================================================
//
//  Phase shift of the horizontal sync pulse generated by the KSM module on VGA.
//  If the picture on your monitor or video capture device goes beyond the left edge of the screen, then uncomment this line and
//  specify the horizontal shift value in pixels.
//  If the image looks fine without correction, leave the line commented.
//
`define hsync_shift 11'd27

//======================================================================================================
//
// DRAM CAS Latency
// This parameter can take the value 2 or 3.
// With CL=2 the exchange is faster, but not all types of DRAM support it.
`define cas_latency 2

//======================================================================================================
//
// Individual settings for processor boards
//--------------------------------------------------

`ifdef mc1280_board
//****************************************
//*   МС1280
//****************************************
 `define BOARD mc1280        // Name of the plug-in module of the processor board
 `define clkref 50000000     // CPU clock speed in hz
 `define PLL_MUL 50          // PLL multiplier
 `define PLL_DIV 12          // PLL divider
 
//-------------------------------------------------- 
`elsif mc1260_board
//****************************************
//*   МС1260
//****************************************
 `define BOARD mc1260        // Name of the plug-in module of the processor board
 `define clkref 75000000     // CPU clock speed in hz
 `define PLL_MUL 75          // PLL multiplier
 `define PLL_DIV 12          // PLL divider
 `define CPUSLOW 15          // Number of cycles the processor skips in slowdown mode
 
//--------------------------------------------------
`elsif mc1201_02_board
//****************************************
//*   МС1201.02
//****************************************
 `define BOARD mc1201_02     // Name of the plug-in module of the processor board
 `define clkref 100000000    // CPU clock speed in hz
 `define PLL_MUL 100         // PLL multiplier
 `define PLL_DIV 12          // PLL divider
 `define CPUSLOW 21          // Number of cycles the processor skips in slowdown mode
 `define timer_init 1'b1     // Начальное состояние таймера: 0 - выключен, 1 - включен

  // Selecting the version of the shadow ROM - 055 or 279
  
  //`define mc1201_02_rom "dvk-fpga/rom/055.mif"
 `define mc1201_02_rom "dvk-fpga/rom/279.mif"

//--------------------------------------------------
`elsif mc1201_01_board
//****************************************
//*   МС1201.01
//****************************************
 `define BOARD mc1201_01     // Name of the plug-in module of the processor board
 `define clkref 100000000    // тCPU clock speed in hz
 `define PLL_MUL 100         // PLL multiplier
 `define PLL_DIV 12          // PLL divider
 `define CPUSLOW 21          // Number of cycles the processor skips in slowdown mode
 `define timer_init 1'b1     // Initial state of the timer: 0 - off, 1 - on
  
`endif  


//==========================================================================================================================================
//------------------ end of list of configurable parameters -------------------------------------------------------------
//==========================================================================================================================================

// Removing a graphic module when there is no text terminal
`ifndef KSM_module
`undef KGD_module
`endif

// Selecting SDSPI Master and Slaves
`ifdef RK_module
  `define RK_sdmode 1'b1  
  `define DM_sdmode 1'b0  
  `define MY_sdmode 1'b0
  `define DX_sdmode 1'b0
  `define DW_sdmode 1'b0
  `define def_mosi  rk_mosi
  `define def_cs    rk_cs
  `define def_sclk  rk_sclk

  `elsif DM_module
  `define DM_sdmode 1'b1  
  `define RK_sdmode 1'b0  
  `define MY_sdmode 1'b0
  `define DX_sdmode 1'b0
  `define DW_sdmode 1'b0
  `define def_mosi  dm_mosi
  `define def_cs    dm_cs
  `define def_sclk  dm_sclk
  
`elsif MY_module
  `define MY_sdmode 1'b1
  `define RK_sdmode 1'b0  
  `define DM_sdmode 1'b0  
  `define DX_sdmode 1'b0
  `define DW_sdmode 1'b0
  `define def_mosi  my_mosi
  `define def_cs    my_cs
  `define def_sclk  my_sclk

`elsif DX_module
  `define DX_sdmode 1'b1
  `define MY_sdmode 1'b0
  `define DM_sdmode 1'b0  
  `define RK_sdmode 1'b0  
  `define DW_sdmode 1'b0
  `define def_mosi  dx_mosi
  `define def_cs    dx_cs
  `define def_sclk  dx_sclk
  
`else
  `define DW_sdmode 1'b1
  `define DX_sdmode 1'b0
  `define DM_sdmode 1'b0  
  `define MY_sdmode 1'b0
  `define RK_sdmode 1'b0  
  `define def_mosi  dw_mosi
  `define def_cs    dw_cs
  `define def_sclk  dw_sclk
  
`endif  
  
  
  
