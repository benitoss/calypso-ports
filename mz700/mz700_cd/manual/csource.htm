<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META name="GENERATOR" content="IBM WebSphere Studio Homepage Builder Version 6.5.2.0 for Windows">
<META http-equiv="Content-Style-Type" content="text/css">
<TITLE>MZ-700 on 1chipMSX ユーザーズマニュアル【技術情報】</TITLE>
</HEAD>
<BODY>
<P><FONT size="+2"><B>技術情報</B></FONT></P>
<P><A name="csource"><B><FONT size="+1">AVR用Cソース</FONT></B></A></P>
<P>　いわゆるWinAVRでコンパイルしています。Makefileでビルド実行してますが、作り方が甘いのでヘッダファイルを修正しただけではコンパイルしてくれません。Cソースは2本あって、その概要は次のようになっています。</P>
<UL>
  <LI>mzctrl.c
</UL>
<BLOCKQUOTE>　起動直後に実行されるプログラムで、本体プログラムをEPCS4(コンフィグROM)から読み出してブロックRAMに書き込み、ポート0を叩きます。このポートは起動直後のみリセットポートとして動くようになっています。リセットされるとROMが消えてそれまでのRAMがROMとして接続され、次のmzmain.cのプログラムが実行されるようになります。<BR>
　コンパイルして得られた.hexファイルは、QuartusIIのユーティリティで1行2バイトの変則HEXファイル(Altera
HEXフォーマットというらしい)に変換しています。</BLOCKQUOTE>
<UL>
  <LI>mzmain.c
</UL>
<BLOCKQUOTE>　通常MZ-700の裏で実行されるプログラムです。キー入力でメニュー表示して動作する部分と、テープやフロッピーのようにバックグラウンドで動いてMZ-700のペリフェラルとして動作する部分があります。リアルタイムOSで動かすと楽そうなんですが、プログラムが大きくなりそうで普通に組んでいます。<BR>
　FATファイルシステムへのアクセスのために<A href="http://elm-chan.org/">えるむ</A>で公開されている<A href="http://elm-chan.org/fsw/ff/00index_j.html">FatFs</A>を組み込んでいます。入手した時期の問題でVer.0.3を使用しています。<BR>
　コンパイル後、MZ用ROMデータなどといっしよにsrec_catプログラムで連結されてQuartusIIのプロジェクトに転送されます。これをQuartusIIのユーティリティで合成後のFPGAデータと合体させれば1chipMSXにダウンロード可能な.pofファイルになり、さらにこれをpof2pldコマンドによってPLDLOADコマンドでロード可能な.pldファイルを作れます。</BLOCKQUOTE>
<HR>
<TABLE width="100%">
  <TBODY>
    <TR>
      <TD><A href="struct.htm"><IMG src="pics/01c.jpg" width="63" height="63" border="0"></A></TD>
      <TD align="center"><A href="../index.htm"><IMG src="pics/01a.jpg" width="63" height="63" border="0"></A></TD>
      <TD align="right"><A href="seigen.htm"><IMG src="pics/01b.jpg" width="63" height="63" border="0"></A></TD>
    </TR>
  </TBODY>
</TABLE>
<P align="right">(C) Nibbles Lab. 2007</P>
</BODY>
</HTML>